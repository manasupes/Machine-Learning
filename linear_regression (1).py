# -*- coding: utf-8 -*-
"""Linear Regression

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pTE-5BMwndSpywEJ5TMhf44h652ivrL6
"""

pip install maths

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline

import ipywidgets as widgets
from IPython.display import display

style = {'description_width': 'initial'}

from google.colab import files
uploaded = files.upload()

dataset = pd.read_csv('Salary.csv')
dataset.head()

print(f"Dataset has {dataset.shape[0]} rows and {dataset.shape[1]} columns.")

wig_col = widgets.Dropdown(
                options=dataset.columns.tolist(),
                description='Choose a Column to Plot vs. Salary',
                disabled=False,
                layout=widgets.Layout(width='40%', height='40px'),
                style=style)

#Divide the dataset into dependent variable and independent variable 
X = dataset.iloc[:, :-1]  #Independent variable yearsOfExperience
Y = dataset.iloc[:, -1]   #Dependent variable salary

from sklearn.model_selection import train_test_split

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 1/3, random_state=0)

from sklearn.linear_model import LinearRegression
SimpleLinearRegression = LinearRegression()
SimpleLinearRegression.fit(X_train, Y_train)

Y_predict = SimpleLinearRegression.predict(X_test)

from sklearn import metrics
print("Prediction Accuracy = ", metrics.r2_score(Y_test, Y_predict))

# Comparing Actual and Predicted Salaries for he test set
print("\nActual vs Predicted Salaries \n------------------------------\n")
error_df = pd.DataFrame({"Actual" : Y_test,
                         "Predicted" : Y_predict,
                         "Abs. Error" : np.abs(Y_test - Y_predict)})

error_df

plt.scatter(X_train, Y_train, color = 'red')
plt.plot(X_train, SimpleLinearRegression.predict(X_train))



